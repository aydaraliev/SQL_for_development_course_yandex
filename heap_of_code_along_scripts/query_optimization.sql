SELECT *
FROM (VALUES (1), (3), (4), (56), (78) -- все значения из списка
     ) AS statuses (id);

-- создадим тестовую таблицу
CREATE TABLE test
(
    id  SERIAL PRIMARY KEY,
    val INTEGER
);
-- внесём данные для проверки
INSERT INTO test (val)
SELECT (random() * 1000)::int
FROM generate_series(1, 10000000);

-- выполним запрос с WHERE
SELECT count(*)
FROM test
WHERE val IN
      (976, 29, 105, 725, 387, 702, 694, 95, 732, 394, 196, 450, 974, 503, 817, 829, 770, 402, 6, 651, 969, 570, 344,
       191, 156, 179, 346, 329, 605, 924, 658, 20, 353, 805, 534, 544, 127, 136, 998, 779, 715, 535, 165, 457, 542, 168,
       368, 618, 907, 654, 242, 949, 760, 803, 26, 37, 827, 862, 140, 660, 759, 622, 79, 520, 337, 228, 777, 850, 198,
       196, 423, 825, 763, 381, 408, 56, 453, 317, 768, 779, 797, 267, 540, 595, 639, 518, 174, 853, 784, 655, 912, 546,
       107, 604, 210, 953, 969, 185, 552, 538);
-- 1.8 сек

-- выполним запрос с JOIN
SELECT count(*)
FROM test
         INNER JOIN (VALUES (976),
                            (29),
                            (105),
                            (725),
                            (387),
                            (702),
                            (694),
                            (95),
                            (732),
                            (394),
                            (196),
                            (450),
                            (974),
                            (503),
                            (817),
                            (829),
                            (770),
                            (402),
                            (6),
                            (651),
                            (969),
                            (570),
                            (344),
                            (191),
                            (156),
                            (179),
                            (346),
                            (329),
                            (605),
                            (924),
                            (658),
                            (20),
                            (353),
                            (805),
                            (534),
                            (544),
                            (127),
                            (136),
                            (998),
                            (779),
                            (715),
                            (535),
                            (165),
                            (457),
                            (542),
                            (168),
                            (368),
                            (618),
                            (907),
                            (654),
                            (242),
                            (949),
                            (760),
                            (803),
                            (26),
                            (37),
                            (827),
                            (862),
                            (140),
                            (660),
                            (759),
                            (622),
                            (79),
                            (520),
                            (337),
                            (228),
                            (777),
                            (850),
                            (198),
                            (196),
                            (423),
                            (825),
                            (763),
                            (381),
                            (408),
                            (56),
                            (453),
                            (317),
                            (768),
                            (779),
                            (797),
                            (267),
                            (540),
                            (595),
                            (639),
                            (518),
                            (174),
                            (853),
                            (784),
                            (655),
                            (912),
                            (546),
                            (107),
                            (604),
                            (210),
                            (953),
                            (969),
                            (185),
                            (552),
                            (538)) AS vals (val)
                    ON test.val = vals.val;
-- 1.2 сек

-- создадим таблицу из первичного ключа id и пяти колонок типа NUMERIC
CREATE TABLE offset_test
(
    id   SERIAL PRIMARY KEY,
    val1 NUMERIC,
    val2 NUMERIC,
    val3 NUMERIC,
    val4 NUMERIC,
    val5 NUMERIC
);

-- внесем в неё десять миллионов строк со случайными числами
-- запаситесь терпением, операция может занять несколько минут
INSERT INTO offset_test (val1, val2, val3, val4, val5)
SELECT random() * 10,
       random() * 100,
       random() * 1000,
       random() * 10000,
       random() * 100000
FROM generate_series(1, 10000000);

-- выберем данные второй страницы
SELECT id, val1, val2, val3, val4, val5
FROM offset_test
ORDER BY id ASC
LIMIT 30 OFFSET 30;
-- время выполнения ~1ms

-- выберем данные 100001-й страницы
SELECT id, val1, val2, val3, val4, val5
FROM offset_test
ORDER BY id ASC
LIMIT 30 OFFSET 3000000;
-- время выполнения > 500ms

-- выберем данные 900001-й страницы
SELECT id, val1, val2, val3, val4, val5
FROM offset_test
ORDER BY id ASC
LIMIT 30 OFFSET 9000000;
-- время выполнения > 2s
